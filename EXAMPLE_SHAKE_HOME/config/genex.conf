# $Revision: 1465 $	DO NOT REMOVE OR CHANGE THIS LINE
########################################################################
# template specifies a template file for a web page. There are some
# assumptions made about files specified here:
# - The filename is assumed to end in a .html suffix, but the suffix does 
#   not need to be in the name listed here.
# - The template is assumed to be somewhere in the a subdirectory of 
#   <SHAKEHOME>/lib/genex/web/template, and the template will be found 
#   based on the name given here.
#
# Example:
#
#	template : pga
#
# In this case a template file of pga.html is assumed to be in one of
# the template subdirectories (in this it is in shake/event).
#
# Note: This configuration parameter simplifies adding new templates to
# the website (compared to having these values embedded in the code).
# However, removing templates is not simply a matter of commenting out 
# the template name in this file. Because the of the links between 
# templates and the headers of each page, removing a template is 
# normally more complicated.
########################################################################
template	: index
template	: pga
template	: pgv
template	: intensity
template	: psa03
template	: psa10
template	: psa30
template	: products
template	: about_formats

########################################################################
# channel specifies the order in which channels will appear in the 
# text and html stationlists for each station; unspecified channels will 
# be placed at the end of the list for each station, in no particular
# order; all letters in the channel name below should be lower case, even
# if the components are delivered to the system in upper case; note that 
# we are expecting 3-letter component names of the form HLE, HHZ, etc.;
# currently only the first two letters of the channel name will be used
# for sorting the channel, and the third letter will sort the components
# (see below), all other letters will be ignored for sorting purposes;
# also note that what we are calling a channel here is actually a channel
# only when combined with the component, below;
#
# Example:
#
#	channel : hl hh as
#
# In this case if a station has HL?, HH?, and AS? channels reporting,
# they will be displayed with the HLs first, HHs second, ASs third,
# and all other channels after these.
########################################################################
channel		: hl hh 

########################################################################
# component specifies the order in which the components will appear in 
# the text and html stationlists; unspecified components will follow
# the specified ones in no particular order; components for sorting
# should be specified in lower case letters; the component is expected
# to be the third letter in the channel name
#
# Example:
#
#	component : z n e
#
# Would order the components for each channel with 'z' first, 'n' second,
# and 'e' third, with all unspecified components following these in no
# particular order
########################################################################
component	: n e z

########################################################################
# tabconfig specifies an XML file with settings for tab header of the
# website files. The file path is relative to <SHAKE_HOME>
#
# Example:
#
#	tabconfig : lib/tabheader.xml
#
# Would instruct genex to parse the file at
# <SHAKE_HOME>/lib/tabheader.xml as XML to retrieve the website
# tab settings.
########################################################################
tabconfig       : lib/genex/web/config/tabheader.xml

########################################################################
# archiveconfig specifies an XML file with settings for the archive
# pages of the website. The file path is relative to <SHAKE_HOME>
#
# Example:
#
#	archiveconfig : lib/archivepages.xml
#
# Would instruct genex to parse the file at
# <SHAKE_HOME>/lib/archivepages.xml as XML to retrieve the website
# tab settings.
########################################################################
archiveconfig       : lib/genex/web/config/archivepages.xml

########################################################################
# on_homepage specifies the duration an event of a specific magnitude
# should remain listed in the "Other Recent Events" list on the website 
# homepage. Alternatively, it specifies the event id of an event that 
# should be shown in this list regardless of magnitude or time since 
# the event.
#
# Multiple instances of this parameter can be given. In case of 
# conflicting duration settings, the longer duration will be used.
#
# The accepted formats are
#   on_homepage : <magnitude> <time since event>
#   on_homepage : <event id>
#
# The time duration of <time since event> has the format
#   <float><y|m|w|d> where y = year, m = month, w = week, and d = day.
#   A year is calculated as 365 days, a month as 30 days.
#
# Examples:
#
#	on_homepage : 6.0 6m   (M >= 6.0 stays on homepage for 6 months)
#	on_homepage : 4.5 1w   (M >= 4.5 stays on homepage for 1 week)
#	on_homepage : 9542921  (event 9542921 stays on until this 
#                               configuration setting is removed)
#
# Note: To find out if the addition of a specific event is redundant
# (meaning, the magnitude-time rules would add it automatically), use
# the -verbose flag of genex.
########################################################################
on_homepage     : 8.0 3m
on_homepage   : 7.0 3d
on_homepage   : 6.5 1d
on_homepage   : 5.5 1d
on_homepage     : 1.1 1d

########################################################################
# off_homepage specifies the event id of an event that should not be
# shown in the "Other Recent Events" list on the homepage regardless of 
# magnitude or time since the event.
#
# Multiple instances of this parameter can be given to specify more than
# one event.
#
# The accepted format is
#   off_homepage : <event id>
#
# Example:
#
#	off_homepage : 9542921
#
# Note: To find out if the removal of a specific event is redundant
# (meaning, the magnitude-time rules would remove it automatically), use
# the -verbose flag of genex.
########################################################################

########################################################################
#  zip: the path to the zip executable; zip is needed if GIS shape 
#       files are created (see below), or if genex is invoked with 
#       the -zip flag; there is no default
#
# Example:
#	zip          : /opt/util/bin/zip
########################################################################
zip : /usr/bin/zip

########################################################################
# Shapefile parameters.  These parameters are only used if genex is
# run with the '-shape <arg>' flag.
#
# Shape files are collected into a zip archive.  Thus, each set of
# shapefile parameter lines must be preceeded by a line of the form:
#
#	zipfile : filename [aorn]
#
# Which will create a file "filename.zip" if genex is run with the
# '-shape filename' option.  The zip file thus created will contain the
# component files generated by all of the subsequent 'shapefile' lines
# up to the next 'zipfile' line (or the EOF).  If 'filename' is followed
# by an optional 'aorn' (all or nothing), the shapefile will not be 
# produced and genex will emit a warning if any of the specified components
# are missing.  If 'aorn' is omitted, the file will be produced if any
# of the components are available, and a message about the missing file
# will be found in <shake_home>/logs/shape.log.
#
# Multiple 'zipfile'/'shapefile' specifications are allowed.  genex may 
# be run with zero or more '-shape zipfile' arguments.
#
# NOTE: to use zipfile/shapefile to generate shape files, you must 
# specify the path to a zip executable with a 'zip' parameter line
#
# Shape "files" (which are really three files: .shp .shx and .dbf) can
# be made for any of the computed ground motion parameters using the
# shapefile line:
#
#	shapefile : parameter contour_interval first_contour multiplier
#
# parameter 	must be one of: pga, psa03, psa10, psa30, pgv, mi
# contour_interval is, obviously, the interval between contours
# first_contour will, typically be 1/2 of the contour interval which
#               will result in most of the polygons being at the expected 
#		values; see the documentation for the contour program
#		for details and more options
# multiplier	a value by which the data in the grid are multiplied
#		prior to contouring (values of contour_interval and
#		first_contour refer to values after this scaling
#		has been applied
#
# The default parameters produce a set of shape files adequate for input 
# to HAZUS (zipfile : hazus), the other set makes a more generally useful 
# set of shape files.  To generate additional polygon shape files, add 
# additional 'zipfile'/ 'shapefile' parameter sets.
#
########################################################################
# 9.20.02 HAZUS EMP. CORRECTION TO PROVIDE "MEAN" VALUES FROM PEAK VALUES
# For HAZUS, PGA & PSA are multiplied by 0.01 is to go from "%g" to "g".
# We then reduce by 15% (.01/1.15 = 0.0087)
# PGV is multiplied by 0.3937 (i.e., 1/2.54) to convert from cm/sec
# to inches/sec, and then reduced by 15% (0.3937/1.15 = 0.3423)
########################################################################

zipfile : hazus aorn
shapefile : pga 0.04 0.02 0.0087
shapefile : psa03 0.04 0.02 0.0087
shapefile : psa10 0.04 0.02 0.0087
shapefile : pgv 2.0 1.0 0.3423 

zipfile : shape
shapefile : pga 0.04 0.02 0.01 
shapefile : psa03 0.04 0.02 0.01 
shapefile : psa10 0.04 0.02 0.01 
shapefile : psa30 0.04 0.02 0.01 
shapefile : pgv 2.0 1.0 1.0
shapefile : mi 0.2 0.1 1.0

########################################################################
# The 'convert' command.  This is needed only if the PostScript
# maps are converted to JPEGs (which is almost always going to be the
# case).  The conversion package must be set up to handle a PostScript 
# to JPEG conversion. In its simplest form, this may be the path to the
# convert program, e.g.:
#
#	convert : /usr/bin/convert
#
# but may also be a more complex command (as long as that command is
# compatible with ImageMagick's command line options). E.g.:
#
#	convert : /usr/local/bin/gm convert
#
# if you are using GraphicsMagick's gm utility.
########################################################################
convert : /usr/bin/gm convert

########################################################################
# quality: sets the quality of the JPEG compression.  It must be a 
# number from 0 (worst quality) to 100 (best quality).  90 is the
# default.  Better quality files look nicer, but are larger.
# Example:
#
#	quality : 75
#
########################################################################
quality : 85

########################################################################
# mp: sets the path to the metadata parser. See the Software guide for
# instructions on obtaining mp, or for compiling it from the source
# supplied with ShakeMap. Note that this in NOT the mp program 
# that comes installed with some Unix/Linux distributions. Again, see
# the software guide for more information.
#
# The default is <shake_home>/bin/mp, though this is not ideal since
# that may be deleted by a "make clean". If you make mp from the supplied 
# source, that's probably okay, but if you obtain and compile it 
# yourself you may want to put it somewhere safer, and set the path here.
#
# This parameter is only accessed if the -metadata flag is used.
########################################################################

########################################################################
# By default, the scenario archive page is sorted by date just like the
# other pages. To change this, add this line:
#   
#   sort_se_by : $sql_query_string
#
# The string is usually 'id' or 'id asc' to sort by scenario name.
# Or try 'mag desc' to sort by magnitude.
########################################################################
sort_se_by : name

########################################################################
# kml_base_url gives the URL for a server from which KML data files
# can be retrieved.  KML is the data input for Google Earth.  The 
# appropriate path will be constructed as follows:
#
#	<kml_base_url>/<event_id>/download/<KML_data_file>
#
# For example, if kml_base_url was set to:
#
#	kml_base_url : http://earthquake.usgs.gov/shakemap/sc/shake
#
# then the intensity overlay for event 9108645 would be expected at:
#
#  http://earthquake.usgs.gov/shakemap/sc/shake/9108645/download/ii_overlay.jpg
#
# There is no default, and failure to set this value will prevent 
# the generation of the KML file.
########################################################################
kml_base_url : http://earthquake.usgs.gov/shakemap/global/shake

########################################################################
# kml_logo_url: specifies a logo to use as a screen overlay in the KML
# file.  The default is the standard USGS logo found at:
#
# http://earthquake.usgs.gov/earthquakes/feed/v1.0/images/kml_usgs_logo.png
#
# If you are hosting the KML from your own server and want the logo hosted
# there as well (i.e., you have set kml_base_url to point to your web 
# server), you can set kml_logo_url to:
#
# <kml_base_url>/icons/USGSlogo.png
#
# If you use another logo, you can put it in:
#
# <shake_home>/lib/genex/web/permanent/shake/icons
#
# and then run 'transfer -permweb'. Assuming that you set kml_base_url to
# something like "http://myserver.me.org/shakemap/shake", then you would
# set kml_logo_url to:
#
# http://myserver.me.org/shakemap/shake/icons/MyLogo.png
#
# where "MyLogo.png" is whatever you nameed your logo image.
########################################################################

########################################################################
# kml_legend_url: specifies the URL of the ShakeMap intensity legend to
# use as a screen overlay in the KML file. The default is:
#
# http://earthquake.usgs.gov/earthquakes/eventpage/images/shakemap.png
#
# If you are hosting the KML from your own server and want the legend hosted
# there as well (i.e., you have set kml_base_url to point to your web 
# server), you can set kml_legend_url to:
#
# <kml_base_url>/icons/shakemap.png
#
# If you use another legend, you can put it in:
#
# <shake_home>/lib/genex/web/permanent/shake/icons
#
# and then run 'transfer -permweb'. Assuming that you set kml_base_url to
# something like "http://myserver.me.org/shakemap/shake", then you would
# set kml_legend_url to:
#
# http://myserver.me.org/shakemap/shake/icons/MyLegend.png
#
# where "MyLegend.png" is whatever you nameed your legend image.
########################################################################
