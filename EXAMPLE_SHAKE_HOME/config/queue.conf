# $Revision: 1301 $    DO NOT REMOVE OR CHANGE THIS LINE
###########################################################################
# logfile: logging and errors are appended to this file; this entry is 
#          required for normal operation -- if omitted, messages will all
#          go to STDOUT (which is also where they will go if neither the
#          specified file nor /tmp/queue.log can be opened)
#          in the specified path, if the string "<SHAKE_HOME>" appears it
#          will be replaced with the ShakeMap installation directory
###########################################################################
logfile : <SHAKE_HOME>/logs/queue.log

###########################################################################
# verbose: Make more noise in the logfile if > 0
# Levels currently supported: 0, 1, 2; the default is 0, but we set
# it to 2, below, because that seems to be what most people want.
###########################################################################
verbose : 2

###########################################################################
# server: Accept connections from these servers; any number of "server" 
#         statements are allowed and multiple servers may be given on the
#         same line (space separated); if none are given, "localhost" will
#         be used; localhost is always allowed (for the repeaters) so
#         need not be listed here.
#
# Example:
#
#         server : jet.gps.caltech.edu
#         server : spring.gps.caltech.edu
#         server : quake.gps.caltech.edu
#         server : willow.gps.caltech.edu
###########################################################################
server :  gateway
###########################################################################
# queue_length: Max # of queued events; additional events will cause the
#               lowest priority event to be discarded; setting to 0 keeps 
#               the queue running, but stops any new events from queuing; 
#               values < 0 are errors; the default is 10;
#
# Example:
#
#         queue_length : 20
#
###########################################################################

###########################################################################
# nspawnmax: Max # of processing shells to have running simultaneously;
#            values <= 0 are errors; the default is 1; machines with
#            multiple processors can handle more than 1
#
# Example:
#
#        nspawnmax : 1
#
###########################################################################

###########################################################################
# minmag: The minimum magnitude an event must achieve to be processed;
#         the default is 4.0
#
# Example:
#
# minmag : 4.0
#
###########################################################################
minmag : 3.5
###########################################################################
# box: "Metro box" within which the magnitude "mag" supersedes "minmag" 
#      (above) and "delta_priority" (possibly negative) is added to the 
#      event priority (see the description of the "agemod" statement found
#      elsewhere in this file); multiple boxes are allowed; if the boxes
#      overlap, the first one encountered (in the order they are listed 
#      below) will be used; this statement is optional, the default is to 
#      have no metro boxes
#
#      Statement format:
#
#        box : mag delta_priority lat1 lon1 ... latN lonN
#
#      The last coordinate is assumed to connect to the first; 
#
# Example:
#
#        box : 3.5 0.5              &&
#              33.50 -116.75        &&
#              33.50 -118.25        &&
#              34.33 -120.25        &&
#              34.75 -120.25        &&
#              34.75 -116.75
###########################################################################

###########################################################################
# repeat: Set up a schedule of re-runs for events of varying sizes; each
#         line has the form:
#
#           repeat mag t1 t2 ... tN
#
#         where the tn's are delays (from the event origin time) at 
#         which events of magnitude greater than or equal to "mag" will be 
#         re-run; the repeat line with the highest magnitude takes precedence;
#         the default (i.e. no 'repeat' lines are given) is to not rerun 
#         events; the tn's may take one of the following forms:
#
#           <int>
#           <int>m
#           <int>h
#           <int>d
#
#      Where '<int>' is a positive integer, no suffix or a suffix
#      of 'm' indicates minutes, a suffix 'h' means hours, and a suffix
#      'd' means days.
#
# Example
# To set up the following schedule:
#
#           0.0 <= Mag  < 4.5       : 15, 30 min
#           4.5 <= Mag  < 6.0       : 5, 15, 30 min
#           6.0 <= Mag  < oo        : 5, 15, 30, 60 min
#
# use:
#
#           repeat : 0.0 15 30
#           repeat : 4.5 5 15 30
#           repeat : 6.0 5 15 30 1h
###########################################################################
repeat         : 0.0 60
repeat         : 4.5 15 60
repeat         : 6.0 5 15 30 1h

###########################################################################
# agemod: Events are prioritized for processing (with higher priorities
#         being processed first) based on the formula:
#
#           priority = magnitude + boxmod + update
#
#         Where "magnitude" is the event magnitude, "boxmod" is the 
#         "delta_priority" given in the "box" statement found elsewhere
#         in this file if the event falls within a defined box and is
#         zero otherwise, and "update" is taken from the "agemod"
#         statements below; the statements have the form:
#
#           agemod : time update
#
#         Where "update" is the amount (possibly negative) added to the
#         priority if the update time is less than or equal to "time"
#         (time 0 indicates the first run of the event); the timing of 
#         repeated runs is given by the "repeat" statements found 
#         elsewhere in this file 
########################################################################### 
agemod        :  0 1.0
agemod        : 15 0.5
agemod        : 30 0.2

########################################################################### 
# sleep : Specifies an integer number of seconds after receiving an event
#         message for queue to wait before querying the database for 
#         event information. This allows for short propagation delays in
#         database replication, etc. This should be a small number, >= 0.
#         The delay should be kept short because the process will literally
#         block during this time. If more than a few seconds is required,
#         another solution should be found.
# Example:
#
#        sleep : 2
#
# The default is zero. 
########################################################################### 

########################################################################### 
# use_db : Specifies whether or not to attempt to connect to the AQMS
#          database(s) defined in db.conf in order to retrieve the
#          event (origin) information. The default is 'true' and AQMS
#          operators will likely leave it that way. If use_db is set
#          to 'false', the program will look for the file "event.xml"
#          in <shake_home/data/<event_id>/input, and use the origin
#          parameters therein. If the file is not found, the event
#          will not be processed.
#
# Example:
#
#         use_db : false
#
########################################################################### 
use_db : false
########################################################################### 
# delete_orphans : If use_db (see above) is 'false', and the earthquake
#                  parameters found in event.xml do not meet the criteria
#                  for generating a ShakeMap (magnitude too small, etc.)
#                  then the event's data directory will be deleted if 
#                  delete_orphans is 'true' (default). If delete_orphans
#                  is set to 'false', then the event's data directory
#                  will be preserved.
#
# Example:
#
#         delete_orphans : false
#
########################################################################### 

########################################################################### 
# max_process_time : the length of time (in seconds) that queue will 
#                    wait for a 'shake' child process to complete; if 
#                    the processing time exceeds this amount, the 
#                    child will be killed. This parameter is helpful to
#                    handle situations where shake hangs (e.g., while 
#                    trying to send email) and queue stops processing
#                    new events as a result. The default is 600. The 
#                    value must be >= 0, but should be set generously
#                    enough so that any automatic run has time to 
#                    complete.
#
# Example:
#
#         max_process_time : 300
#
########################################################################### 
